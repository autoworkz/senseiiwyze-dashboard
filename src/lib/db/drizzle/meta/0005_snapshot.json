{
  "id": "18ac5921-c68a-413f-9d82-cb7e39a594fc",
  "prevId": "5d8dfb82-ffb9-4f9b-ba83-2c6cc169e9ea",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.account_user": {
      "name": "account_user",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "account_role": {
          "name": "account_role",
          "type": "account_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "account_user_account_id_fkey": {
          "name": "account_user_account_id_fkey",
          "tableFrom": "account_user",
          "tableTo": "workplaces",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "account_user_user_id_fkey": {
          "name": "account_user_user_id_fkey",
          "tableFrom": "account_user",
          "tableTo": "profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.accounts": {
      "name": "accounts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "primary_owner_user_id": {
          "name": "primary_owner_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "auth.uid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "varchar(320)",
          "primaryKey": false,
          "notNull": false
        },
        "is_personal_account": {
          "name": "is_personal_account",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "updated_by": {
          "name": "updated_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "picture_url": {
          "name": "picture_url",
          "type": "varchar(1000)",
          "primaryKey": false,
          "notNull": false
        },
        "public_data": {
          "name": "public_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        }
      },
      "indexes": {
        "ix_accounts_is_personal_account": {
          "name": "ix_accounts_is_personal_account",
          "columns": [
            {
              "expression": "is_personal_account",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_accounts_primary_owner_user_id": {
          "name": "ix_accounts_primary_owner_user_id",
          "columns": [
            {
              "expression": "primary_owner_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "unique_personal_account": {
          "name": "unique_personal_account",
          "columns": [
            {
              "expression": "primary_owner_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": true,
          "where": "(is_personal_account = true)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "accounts_created_by_fkey": {
          "name": "accounts_created_by_fkey",
          "tableFrom": "accounts",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "accounts_primary_owner_user_id_fkey": {
          "name": "accounts_primary_owner_user_id_fkey",
          "tableFrom": "accounts",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "primary_owner_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "accounts_updated_by_fkey": {
          "name": "accounts_updated_by_fkey",
          "tableFrom": "accounts",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "updated_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "accounts_slug_key": {
          "name": "accounts_slug_key",
          "nullsNotDistinct": false,
          "columns": [
            "slug"
          ]
        },
        "accounts_email_key": {
          "name": "accounts_email_key",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {
        "accounts_read": {
          "name": "accounts_read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "((( SELECT auth.uid() AS uid) = primary_owner_user_id) OR has_role_on_account(id) OR is_account_team_member(id))"
        },
        "accounts_self_update": {
          "name": "accounts_self_update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "create_org_account": {
          "name": "create_org_account",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "delete_team_account": {
          "name": "delete_team_account",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        },
        "restrict_mfa_accounts": {
          "name": "restrict_mfa_accounts",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        },
        "super_admins_access_accounts": {
          "name": "super_admins_access_accounts",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {
        "accounts_slug_null_if_personal_account_true": {
          "name": "accounts_slug_null_if_personal_account_true",
          "value": "((is_personal_account = true) AND (slug IS NULL)) OR ((is_personal_account = false) AND (slug IS NOT NULL))"
        }
      },
      "isRLSEnabled": false
    },
    "public.accounts_memberships": {
      "name": "accounts_memberships",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "account_role": {
          "name": "account_role",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "updated_by": {
          "name": "updated_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "ix_accounts_memberships_account_id": {
          "name": "ix_accounts_memberships_account_id",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_accounts_memberships_account_role": {
          "name": "ix_accounts_memberships_account_role",
          "columns": [
            {
              "expression": "account_role",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_accounts_memberships_user_id": {
          "name": "ix_accounts_memberships_user_id",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "accounts_memberships_account_id_fkey": {
          "name": "accounts_memberships_account_id_fkey",
          "tableFrom": "accounts_memberships",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "accounts_memberships_account_role_fkey": {
          "name": "accounts_memberships_account_role_fkey",
          "tableFrom": "accounts_memberships",
          "tableTo": "roles",
          "columnsFrom": [
            "account_role"
          ],
          "columnsTo": [
            "name"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "accounts_memberships_created_by_fkey": {
          "name": "accounts_memberships_created_by_fkey",
          "tableFrom": "accounts_memberships",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "accounts_memberships_updated_by_fkey": {
          "name": "accounts_memberships_updated_by_fkey",
          "tableFrom": "accounts_memberships",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "updated_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "accounts_memberships_user_id_fkey": {
          "name": "accounts_memberships_user_id_fkey",
          "tableFrom": "accounts_memberships",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "accounts_memberships_pkey": {
          "name": "accounts_memberships_pkey",
          "columns": [
            "user_id",
            "account_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "accounts_memberships_delete": {
          "name": "accounts_memberships_delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "((user_id = ( SELECT auth.uid() AS uid)) OR can_action_account_member(account_id, user_id))"
        },
        "accounts_memberships_read": {
          "name": "accounts_memberships_read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "restrict_mfa_accounts_memberships": {
          "name": "restrict_mfa_accounts_memberships",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        },
        "super_admins_access_accounts_memberships": {
          "name": "super_admins_access_accounts_memberships",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.activities": {
      "name": "activities",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "category_id": {
          "name": "category_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "subcategory": {
          "name": "subcategory",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "image_url": {
          "name": "image_url",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "thumbnail_url": {
          "name": "thumbnail_url",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "enabled": {
          "name": "enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "meta_data": {
          "name": "meta_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "featured": {
          "name": "featured",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "activities_category_id_fkey": {
          "name": "activities_category_id_fkey",
          "tableFrom": "activities",
          "tableTo": "categories",
          "columnsFrom": [
            "category_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.activity_progress": {
      "name": "activity_progress",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "activity_id": {
          "name": "activity_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "score": {
          "name": "score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "total_score": {
          "name": "total_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "onboarding_completed": {
          "name": "onboarding_completed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "current_task_order": {
          "name": "current_task_order",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        }
      },
      "indexes": {},
      "foreignKeys": {
        "activity_progress_activity_id_fkey": {
          "name": "activity_progress_activity_id_fkey",
          "tableFrom": "activity_progress",
          "tableTo": "activities",
          "columnsFrom": [
            "activity_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "activity_progress_profile_id_fkey": {
          "name": "activity_progress_profile_id_fkey",
          "tableFrom": "activity_progress",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "activity_progress_id_key": {
          "name": "activity_progress_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.answers": {
      "name": "answers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "byDefault",
            "name": "answers_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "answered_at": {
          "name": "answered_at",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "rating": {
          "name": "rating",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "question_id": {
          "name": "question_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "assessment_id": {
          "name": "assessment_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "response": {
          "name": "response",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "evaluation_id": {
          "name": "evaluation_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "answers_assessment_id_fkey": {
          "name": "answers_assessment_id_fkey",
          "tableFrom": "answers",
          "tableTo": "assessments",
          "columnsFrom": [
            "assessment_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "answers_evaluation_id_fkey": {
          "name": "answers_evaluation_id_fkey",
          "tableFrom": "answers",
          "tableTo": "evaluations",
          "columnsFrom": [
            "evaluation_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "answers_question_id_fkey": {
          "name": "answers_question_id_fkey",
          "tableFrom": "answers",
          "tableTo": "questions",
          "columnsFrom": [
            "question_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "cascade"
        },
        "answers_user_id_fkey": {
          "name": "answers_user_id_fkey",
          "tableFrom": "answers",
          "tableTo": "profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "answers_id_key": {
          "name": "answers_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        },
        "idx_unique_answers_for_eval": {
          "name": "idx_unique_answers_for_eval",
          "nullsNotDistinct": false,
          "columns": [
            "question_id",
            "evaluation_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.assessments": {
      "name": "assessments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "type": {
          "name": "type",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true,
          "default": "'rating'"
        },
        "strategy": {
          "name": "strategy",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "results_schema": {
          "name": "results_schema",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "cover_url": {
          "name": "cover_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "estimated_time": {
          "name": "estimated_time",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.billing_customers": {
      "name": "billing_customers",
      "schema": "",
      "columns": {
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider": {
          "name": "provider",
          "type": "billing_provider",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "customer_id": {
          "name": "customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "ix_billing_customers_account_id": {
          "name": "ix_billing_customers_account_id",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "billing_customers_account_id_fkey": {
          "name": "billing_customers_account_id_fkey",
          "tableFrom": "billing_customers",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "billing_customers_account_id_customer_id_provider_key": {
          "name": "billing_customers_account_id_customer_id_provider_key",
          "nullsNotDistinct": false,
          "columns": [
            "account_id",
            "provider",
            "customer_id"
          ]
        }
      },
      "policies": {
        "billing_customers_read_self": {
          "name": "billing_customers_read_self",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "((account_id = ( SELECT auth.uid() AS uid)) OR has_role_on_account(account_id))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.categories": {
      "name": "categories",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "byDefault",
            "name": "categories_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "name": {
          "name": "name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chat_messages": {
      "name": "chat_messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "chat_id": {
          "name": "chat_id",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "chat_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "ix_chat_messages_chat_id": {
          "name": "ix_chat_messages_chat_id",
          "columns": [
            {
              "expression": "chat_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "int4_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "chat_messages_account_id_fkey": {
          "name": "chat_messages_account_id_fkey",
          "tableFrom": "chat_messages",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "chat_messages_chat_id_fkey": {
          "name": "chat_messages_chat_id_fkey",
          "tableFrom": "chat_messages",
          "tableTo": "chats",
          "columnsFrom": [
            "chat_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "delete_chat_messages": {
          "name": "delete_chat_messages",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "has_role_on_account(account_id)"
        },
        "select_chat_messages": {
          "name": "select_chat_messages",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chats": {
      "name": "chats",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "reference_id": {
          "name": "reference_id",
          "type": "varchar(8)",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "settings": {
          "name": "settings",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "ix_chats_account_id": {
          "name": "ix_chats_account_id",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "chats_account_id_fkey": {
          "name": "chats_account_id_fkey",
          "tableFrom": "chats",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "chats_reference_id_key": {
          "name": "chats_reference_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "reference_id"
          ]
        }
      },
      "policies": {
        "delete_chats": {
          "name": "delete_chats",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "has_role_on_account(account_id)"
        },
        "insert_chats": {
          "name": "insert_chats",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "select_chats": {
          "name": "select_chats",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "update_chats": {
          "name": "update_chats",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.config": {
      "name": "config",
      "schema": "",
      "columns": {
        "enable_team_accounts": {
          "name": "enable_team_accounts",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "enable_account_billing": {
          "name": "enable_account_billing",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "enable_team_account_billing": {
          "name": "enable_team_account_billing",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "billing_provider": {
          "name": "billing_provider",
          "type": "billing_provider",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'stripe'"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "public config can be read by authenticated users": {
          "name": "public config can be read by authenticated users",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.constants": {
      "name": "constants",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "json",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.credits_usage": {
      "name": "credits_usage",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "remaining_credits": {
          "name": "remaining_credits",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        }
      },
      "indexes": {},
      "foreignKeys": {
        "credits_usage_account_id_fkey": {
          "name": "credits_usage_account_id_fkey",
          "tableFrom": "credits_usage",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "select_credits_usage": {
          "name": "select_credits_usage",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "has_role_on_account(account_id)"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.evaluations": {
      "name": "evaluations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "assessment_id": {
          "name": "assessment_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "results": {
          "name": "results",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "is_completed": {
          "name": "is_completed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "workplace_id": {
          "name": "workplace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "evaluations_assessment_id_fkey": {
          "name": "evaluations_assessment_id_fkey",
          "tableFrom": "evaluations",
          "tableTo": "assessments",
          "columnsFrom": [
            "assessment_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "evaluations_user_id_fkey1": {
          "name": "evaluations_user_id_fkey1",
          "tableFrom": "evaluations",
          "tableTo": "profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "evaluations_workplace_id_fkey": {
          "name": "evaluations_workplace_id_fkey",
          "tableFrom": "evaluations",
          "tableTo": "workplaces",
          "columnsFrom": [
            "workplace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.game_info": {
      "name": "game_info",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "levels_completed": {
          "name": "levels_completed",
          "type": "boolean[]",
          "primaryKey": false,
          "notNull": false
        },
        "onboarding_completed": {
          "name": "onboarding_completed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "game_id": {
          "name": "game_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "durations": {
          "name": "durations",
          "type": "integer[]",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "game_info_profile_id_fkey": {
          "name": "game_info_profile_id_fkey",
          "tableFrom": "game_info",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.game_tasks": {
      "name": "game_tasks",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "activity_id": {
          "name": "activity_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "max_score": {
          "name": "max_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "order": {
          "name": "order",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "difficulty_level": {
          "name": "difficulty_level",
          "type": "difficulty",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "tasks_activity_id_fkey": {
          "name": "tasks_activity_id_fkey",
          "tableFrom": "game_tasks",
          "tableTo": "activities",
          "columnsFrom": [
            "activity_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.goals": {
      "name": "goals",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "vision_id": {
          "name": "vision_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "top_pos": {
          "name": "top_pos",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "bottom_pos": {
          "name": "bottom_pos",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "left_pos": {
          "name": "left_pos",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "right_pos": {
          "name": "right_pos",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "size_id": {
          "name": "size_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "cluster_class": {
          "name": "cluster_class",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "goals_size_id_fkey": {
          "name": "goals_size_id_fkey",
          "tableFrom": "goals",
          "tableTo": "sizes",
          "columnsFrom": [
            "size_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "goals_vision_id_fkey": {
          "name": "goals_vision_id_fkey",
          "tableFrom": "goals",
          "tableTo": "vision_boards",
          "columnsFrom": [
            "vision_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.image_search": {
      "name": "image_search",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "search_term": {
          "name": "search_term",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.invitations": {
      "name": "invitations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "invited_by": {
          "name": "invited_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "invite_token": {
          "name": "invite_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "(CURRENT_TIMESTAMP + '7 days'::interval)"
        }
      },
      "indexes": {
        "ix_invitations_account_id": {
          "name": "ix_invitations_account_id",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "invitations_account_id_fkey1": {
          "name": "invitations_account_id_fkey1",
          "tableFrom": "invitations",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "invitations_invited_by_fkey": {
          "name": "invitations_invited_by_fkey",
          "tableFrom": "invitations",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "invited_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "invitations_role_fkey": {
          "name": "invitations_role_fkey",
          "tableFrom": "invitations",
          "tableTo": "roles",
          "columnsFrom": [
            "role"
          ],
          "columnsTo": [
            "name"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "invitations_email_account_id_key": {
          "name": "invitations_email_account_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "email",
            "account_id"
          ]
        },
        "invitations_invite_token_key": {
          "name": "invitations_invite_token_key",
          "nullsNotDistinct": false,
          "columns": [
            "invite_token"
          ]
        }
      },
      "policies": {
        "invitations_create_self": {
          "name": "invitations_create_self",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(is_set('enable_team_accounts'::text) AND has_permission(( SELECT auth.uid() AS uid), account_id, 'invites.manage'::app_permissions) AND (has_more_elevated_role(( SELECT auth.uid() AS uid), account_id, role) OR has_same_role_hierarchy_level(( SELECT auth.uid() AS uid), account_id, role)))"
        },
        "invitations_delete": {
          "name": "invitations_delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        },
        "invitations_read_self": {
          "name": "invitations_read_self",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "invitations_update": {
          "name": "invitations_update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "restrict_mfa_invitations": {
          "name": "restrict_mfa_invitations",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        },
        "super_admins_access_invitations": {
          "name": "super_admins_access_invitations",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.lca_invitations": {
      "name": "lca_invitations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "account_role": {
          "name": "account_role",
          "type": "account_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "encode(gen_random_bytes(32), 'hex')"
        },
        "invited_by_user_id": {
          "name": "invited_by_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "account_team_name": {
          "name": "account_team_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "invitation_type": {
          "name": "invitation_type",
          "type": "invitation_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "invitee_email": {
          "name": "invitee_email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "invitations_account_id_fkey": {
          "name": "invitations_account_id_fkey",
          "tableFrom": "lca_invitations",
          "tableTo": "workplaces",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "invitations_invited_by_user_id_fkey": {
          "name": "invitations_invited_by_user_id_fkey",
          "tableFrom": "lca_invitations",
          "tableTo": "profiles",
          "columnsFrom": [
            "invited_by_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "invitations_token_key": {
          "name": "invitations_token_key",
          "nullsNotDistinct": false,
          "columns": [
            "token"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.nonces": {
      "name": "nonces",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "client_token": {
          "name": "client_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "nonce": {
          "name": "nonce",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "purpose": {
          "name": "purpose",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "used_at": {
          "name": "used_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "revoked": {
          "name": "revoked",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "revoked_reason": {
          "name": "revoked_reason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "verification_attempts": {
          "name": "verification_attempts",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "last_verification_at": {
          "name": "last_verification_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "last_verification_ip": {
          "name": "last_verification_ip",
          "type": "inet",
          "primaryKey": false,
          "notNull": false
        },
        "last_verification_user_agent": {
          "name": "last_verification_user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "scopes": {
          "name": "scopes",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{\"\"}'"
        }
      },
      "indexes": {
        "idx_nonces_status": {
          "name": "idx_nonces_status",
          "columns": [
            {
              "expression": "client_token",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "purpose",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            },
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "where": "((used_at IS NULL) AND (revoked = false))",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "nonces_user_id_fkey": {
          "name": "nonces_user_id_fkey",
          "tableFrom": "nonces",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can read their own nonces": {
          "name": "Users can read their own nonces",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(user_id = ( SELECT auth.uid() AS uid))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.notifications": {
      "name": "notifications",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "notifications_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "notification_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'info'"
        },
        "body": {
          "name": "body",
          "type": "varchar(5000)",
          "primaryKey": false,
          "notNull": true
        },
        "link": {
          "name": "link",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "channel": {
          "name": "channel",
          "type": "notification_channel",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'in_app'"
        },
        "dismissed": {
          "name": "dismissed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() + '1 mon'::interval)"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_notifications_account_dismissed": {
          "name": "idx_notifications_account_dismissed",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            },
            {
              "expression": "dismissed",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "notifications_account_id_fkey": {
          "name": "notifications_account_id_fkey",
          "tableFrom": "notifications",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "notifications_read_self": {
          "name": "notifications_read_self",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "((account_id = ( SELECT auth.uid() AS uid)) OR has_role_on_account(account_id))"
        },
        "notifications_update_self": {
          "name": "notifications_update_self",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "restrict_mfa_notifications": {
          "name": "restrict_mfa_notifications",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.obstacles": {
      "name": "obstacles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "vision_id": {
          "name": "vision_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "goal_id": {
          "name": "goal_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "is_completed": {
          "name": "is_completed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.order_items": {
      "name": "order_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "order_id": {
          "name": "order_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "product_id": {
          "name": "product_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "variant_id": {
          "name": "variant_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "price_amount": {
          "name": "price_amount",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "ix_order_items_order_id": {
          "name": "ix_order_items_order_id",
          "columns": [
            {
              "expression": "order_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "order_items_order_id_fkey": {
          "name": "order_items_order_id_fkey",
          "tableFrom": "order_items",
          "tableTo": "orders",
          "columnsFrom": [
            "order_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "order_items_order_id_product_id_variant_id_key": {
          "name": "order_items_order_id_product_id_variant_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "order_id",
            "product_id",
            "variant_id"
          ]
        }
      },
      "policies": {
        "order_items_read_self": {
          "name": "order_items_read_self",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM orders\n  WHERE ((orders.id = order_items.order_id) AND ((orders.account_id = ( SELECT auth.uid() AS uid)) OR has_role_on_account(orders.account_id)))))"
        },
        "restrict_mfa_order_items": {
          "name": "restrict_mfa_order_items",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        },
        "super_admins_access_order_items": {
          "name": "super_admins_access_order_items",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.orders": {
      "name": "orders",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "billing_customer_id": {
          "name": "billing_customer_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "payment_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "billing_provider": {
          "name": "billing_provider",
          "type": "billing_provider",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "total_amount": {
          "name": "total_amount",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true
        },
        "currency": {
          "name": "currency",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "ix_orders_account_id": {
          "name": "ix_orders_account_id",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "orders_account_id_fkey": {
          "name": "orders_account_id_fkey",
          "tableFrom": "orders",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "orders_billing_customer_id_fkey": {
          "name": "orders_billing_customer_id_fkey",
          "tableFrom": "orders",
          "tableTo": "billing_customers",
          "columnsFrom": [
            "billing_customer_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "orders_read_self": {
          "name": "orders_read_self",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(((account_id = ( SELECT auth.uid() AS uid)) AND is_set('enable_account_billing'::text)) OR (has_role_on_account(account_id) AND is_set('enable_team_account_billing'::text)))"
        },
        "restrict_mfa_orders": {
          "name": "restrict_mfa_orders",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        },
        "super_admins_access_orders": {
          "name": "super_admins_access_orders",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.plans": {
      "name": "plans",
      "schema": "",
      "columns": {
        "variant_id": {
          "name": "variant_id",
          "type": "varchar(255)",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "tokens_quota": {
          "name": "tokens_quota",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "select_plans": {
          "name": "select_plans",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public._prisma_migrations": {
      "name": "_prisma_migrations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(36)",
          "primaryKey": true,
          "notNull": true
        },
        "checksum": {
          "name": "checksum",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": true
        },
        "finished_at": {
          "name": "finished_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "migration_name": {
          "name": "migration_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "logs": {
          "name": "logs",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "rolled_back_at": {
          "name": "rolled_back_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "started_at": {
          "name": "started_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "applied_steps_count": {
          "name": "applied_steps_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "workplace": {
          "name": "workplace",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "fdb_ref": {
          "name": "fdb_ref",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "topPos": {
          "name": "topPos",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false
        },
        "bottomPos": {
          "name": "bottomPos",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false
        },
        "leftPos": {
          "name": "leftPos",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false
        },
        "rightPos": {
          "name": "rightPos",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false
        },
        "profile_photo": {
          "name": "profile_photo",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_role": {
          "name": "user_role",
          "type": "role_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'user'"
        },
        "workplace_ref": {
          "name": "workplace_ref",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "institution_ref": {
          "name": "institution_ref",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "employment_status": {
          "name": "employment_status",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_deleted": {
          "name": "is_deleted",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        }
      },
      "indexes": {
        "profiles_email_key": {
          "name": "profiles_email_key",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "profiles_id_fkey": {
          "name": "profiles_id_fkey",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "profiles_institution_ref_fkey": {
          "name": "profiles_institution_ref_fkey",
          "tableFrom": "profiles",
          "tableTo": "workplaces",
          "columnsFrom": [
            "institution_ref"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        },
        "profiles_workplace_ref_fkey": {
          "name": "profiles_workplace_ref_fkey",
          "tableFrom": "profiles",
          "tableTo": "workplaces",
          "columnsFrom": [
            "workplace_ref"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles_copy": {
      "name": "profiles_copy",
      "schema": "",
      "columns": {
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "workplace": {
          "name": "workplace",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "fdb_ref": {
          "name": "fdb_ref",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "topPos": {
          "name": "topPos",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false
        },
        "bottomPos": {
          "name": "bottomPos",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false
        },
        "leftPos": {
          "name": "leftPos",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false
        },
        "rightPos": {
          "name": "rightPos",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false
        },
        "profile_photo": {
          "name": "profile_photo",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_role": {
          "name": "user_role",
          "type": "role_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'user'"
        },
        "workplace_ref": {
          "name": "workplace_ref",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "institution_ref": {
          "name": "institution_ref",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "employment_status": {
          "name": "employment_status",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "profiles_copy_email_idx": {
          "name": "profiles_copy_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "profiles_copy_id_fkey": {
          "name": "profiles_copy_id_fkey",
          "tableFrom": "profiles_copy",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "profiles_copy_institution_ref_fkey": {
          "name": "profiles_copy_institution_ref_fkey",
          "tableFrom": "profiles_copy",
          "tableTo": "workplaces",
          "columnsFrom": [
            "institution_ref"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "profiles_copy_workplace_ref_fkey": {
          "name": "profiles_copy_workplace_ref_fkey",
          "tableFrom": "profiles_copy",
          "tableTo": "workplaces",
          "columnsFrom": [
            "workplace_ref"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.questions": {
      "name": "questions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "question": {
          "name": "question",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "feat_label": {
          "name": "feat_label",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "assessment_id": {
          "name": "assessment_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        }
      },
      "indexes": {
        "questions_feat_label_key": {
          "name": "questions_feat_label_key",
          "columns": [
            {
              "expression": "feat_label",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "questions_question_key": {
          "name": "questions_question_key",
          "columns": [
            {
              "expression": "question",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "fk_questions_assessment": {
          "name": "fk_questions_assessment",
          "tableFrom": "questions",
          "tableTo": "assessments",
          "columnsFrom": [
            "assessment_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.role_permissions": {
      "name": "role_permissions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "byDefault",
            "name": "role_permissions_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "role": {
          "name": "role",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "permission": {
          "name": "permission",
          "type": "app_permissions",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "ix_role_permissions_role": {
          "name": "ix_role_permissions_role",
          "columns": [
            {
              "expression": "role",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "role_permissions_role_fkey": {
          "name": "role_permissions_role_fkey",
          "tableFrom": "role_permissions",
          "tableTo": "roles",
          "columnsFrom": [
            "role"
          ],
          "columnsTo": [
            "name"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "role_permissions_role_permission_key": {
          "name": "role_permissions_role_permission_key",
          "nullsNotDistinct": false,
          "columns": [
            "role",
            "permission"
          ]
        }
      },
      "policies": {
        "restrict_mfa_role_permissions": {
          "name": "restrict_mfa_role_permissions",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "is_mfa_compliant()"
        },
        "role_permissions_read": {
          "name": "role_permissions_read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "super_admins_access_role_permissions": {
          "name": "super_admins_access_role_permissions",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.roles": {
      "name": "roles",
      "schema": "",
      "columns": {
        "name": {
          "name": "name",
          "type": "varchar(50)",
          "primaryKey": true,
          "notNull": true
        },
        "hierarchy_level": {
          "name": "hierarchy_level",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "roles_hierarchy_level_key": {
          "name": "roles_hierarchy_level_key",
          "nullsNotDistinct": false,
          "columns": [
            "hierarchy_level"
          ]
        }
      },
      "policies": {
        "roles_read": {
          "name": "roles_read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {
        "roles_hierarchy_level_check": {
          "name": "roles_hierarchy_level_check",
          "value": "hierarchy_level > 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.scores": {
      "name": "scores",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "score": {
          "name": "score",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.sizes": {
      "name": "sizes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "height": {
          "name": "height",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true,
          "default": 200
        },
        "width": {
          "name": "width",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true,
          "default": 200
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.status": {
      "name": "status",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "state": {
          "name": "state",
          "type": "taskstate",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'UNTOUCHED'"
        },
        "locked": {
          "name": "locked",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "progress": {
          "name": "progress",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "complete": {
          "name": "complete",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "started_at": {
          "name": "started_at",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.subscription_items": {
      "name": "subscription_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "primaryKey": true,
          "notNull": true
        },
        "subscription_id": {
          "name": "subscription_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "product_id": {
          "name": "product_id",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "variant_id": {
          "name": "variant_id",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "subscription_item_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "price_amount": {
          "name": "price_amount",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "interval": {
          "name": "interval",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "interval_count": {
          "name": "interval_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "ix_subscription_items_subscription_id": {
          "name": "ix_subscription_items_subscription_id",
          "columns": [
            {
              "expression": "subscription_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "subscription_items_subscription_id_fkey": {
          "name": "subscription_items_subscription_id_fkey",
          "tableFrom": "subscription_items",
          "tableTo": "subscriptions",
          "columnsFrom": [
            "subscription_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "subscription_items_subscription_id_product_id_variant_id_key": {
          "name": "subscription_items_subscription_id_product_id_variant_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "subscription_id",
            "product_id",
            "variant_id"
          ]
        }
      },
      "policies": {
        "restrict_mfa_subscription_items": {
          "name": "restrict_mfa_subscription_items",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "is_mfa_compliant()"
        },
        "subscription_items_read_self": {
          "name": "subscription_items_read_self",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "super_admins_access_subscription_items": {
          "name": "super_admins_access_subscription_items",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {
        "subscription_items_interval_count_check": {
          "name": "subscription_items_interval_count_check",
          "value": "interval_count > 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.subscriptions": {
      "name": "subscriptions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "billing_customer_id": {
          "name": "billing_customer_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "subscription_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "active": {
          "name": "active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "billing_provider": {
          "name": "billing_provider",
          "type": "billing_provider",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "cancel_at_period_end": {
          "name": "cancel_at_period_end",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "currency": {
          "name": "currency",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "period_starts_at": {
          "name": "period_starts_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "period_ends_at": {
          "name": "period_ends_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "trial_starts_at": {
          "name": "trial_starts_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "trial_ends_at": {
          "name": "trial_ends_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "ix_subscriptions_account_id": {
          "name": "ix_subscriptions_account_id",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "subscriptions_account_id_fkey": {
          "name": "subscriptions_account_id_fkey",
          "tableFrom": "subscriptions",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "subscriptions_billing_customer_id_fkey": {
          "name": "subscriptions_billing_customer_id_fkey",
          "tableFrom": "subscriptions",
          "tableTo": "billing_customers",
          "columnsFrom": [
            "billing_customer_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "restrict_mfa_subscriptions": {
          "name": "restrict_mfa_subscriptions",
          "as": "RESTRICTIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "is_mfa_compliant()"
        },
        "subscriptions_read_self": {
          "name": "subscriptions_read_self",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "super_admins_access_subscriptions": {
          "name": "super_admins_access_subscriptions",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.task_completion": {
      "name": "task_completion",
      "schema": "",
      "columns": {
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "task_id": {
          "name": "task_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "completion_timestamp": {
          "name": "completion_timestamp",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "score": {
          "name": "score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "task_completion_profile_id_fkey": {
          "name": "task_completion_profile_id_fkey",
          "tableFrom": "task_completion",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "task_completion_task_id_fkey": {
          "name": "task_completion_task_id_fkey",
          "tableFrom": "task_completion",
          "tableTo": "game_tasks",
          "columnsFrom": [
            "task_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "task_completion_id_key": {
          "name": "task_completion_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.tasks": {
      "name": "tasks",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "title": {
          "name": "title",
          "type": "varchar(500)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "varchar(50000)",
          "primaryKey": false,
          "notNull": false
        },
        "done": {
          "name": "done",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "ix_tasks_account_id": {
          "name": "ix_tasks_account_id",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "tasks_account_id_fkey": {
          "name": "tasks_account_id_fkey",
          "tableFrom": "tasks",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "delete_tasks": {
          "name": "delete_tasks",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ],
          "using": "((account_id = ( SELECT auth.uid() AS uid)) OR has_permission(( SELECT auth.uid() AS uid), account_id, 'tasks.delete'::app_permissions))"
        },
        "insert_tasks": {
          "name": "insert_tasks",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "select_tasks": {
          "name": "select_tasks",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "update_tasks": {
          "name": "update_tasks",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_emloyement_status": {
      "name": "user_emloyement_status",
      "schema": "",
      "columns": {
        "employment_status": {
          "name": "employment_status",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_emloyement_statuss": {
      "name": "user_emloyement_statuss",
      "schema": "",
      "columns": {
        "employment_status": {
          "name": "employment_status",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_tasks": {
      "name": "user_tasks",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "task_id": {
          "name": "task_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "status_id": {
          "name": "status_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "score_id": {
          "name": "score_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_tasks_profile_id_fkey": {
          "name": "user_tasks_profile_id_fkey",
          "tableFrom": "user_tasks",
          "tableTo": "profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "user_tasks_score_id_fkey": {
          "name": "user_tasks_score_id_fkey",
          "tableFrom": "user_tasks",
          "tableTo": "scores",
          "columnsFrom": [
            "score_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "user_tasks_status_id_fkey": {
          "name": "user_tasks_status_id_fkey",
          "tableFrom": "user_tasks",
          "tableTo": "status",
          "columnsFrom": [
            "status_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_tasks_user_id_task_id_key": {
          "name": "user_tasks_user_id_task_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "user_id",
            "task_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.vendor_ratings": {
      "name": "vendor_ratings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "byDefault",
            "name": "vendor_ratings_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "rating": {
          "name": "rating",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false,
          "default": "'0'"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.vision_boards": {
      "name": "vision_boards",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "img_url": {
          "name": "img_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "vision_boards_user_id_fkey": {
          "name": "vision_boards_user_id_fkey",
          "tableFrom": "vision_boards",
          "tableTo": "profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.vision_log": {
      "name": "vision_log",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "vision_id": {
          "name": "vision_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "device_id": {
          "name": "device_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "edited_at": {
          "name": "edited_at",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "vision_log_vision_id_fkey": {
          "name": "vision_log_vision_id_fkey",
          "tableFrom": "vision_log",
          "tableTo": "vision_boards",
          "columnsFrom": [
            "vision_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.workplace_type": {
      "name": "workplace_type",
      "schema": "",
      "columns": {
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.workplaces": {
      "name": "workplaces",
      "schema": "",
      "columns": {
        "workplace_logo": {
          "name": "workplace_logo",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "workplace_address": {
          "name": "workplace_address",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "workplace_description": {
          "name": "workplace_description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "workplace_domain": {
          "name": "workplace_domain",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "workplace_email": {
          "name": "workplace_email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "workplace_name": {
          "name": "workplace_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "enabled_assessments": {
          "name": "enabled_assessments",
          "type": "uuid[]",
          "primaryKey": false,
          "notNull": true,
          "default": "'{\"3ac68f05-2ea9-4223-b139-d88373859379\"}'"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "workplaces_workplace_domain_key": {
          "name": "workplaces_workplace_domain_key",
          "nullsNotDistinct": false,
          "columns": [
            "workplace_domain"
          ]
        },
        "workplaces_workplace_email_key": {
          "name": "workplaces_workplace_email_key",
          "nullsNotDistinct": false,
          "columns": [
            "workplace_email"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.account_role": {
      "name": "account_role",
      "schema": "public",
      "values": [
        "owner",
        "member",
        "super-owner"
      ]
    },
    "public.app_permissions": {
      "name": "app_permissions",
      "schema": "public",
      "values": [
        "roles.manage",
        "billing.manage",
        "settings.manage",
        "members.manage",
        "invites.manage",
        "tasks.write",
        "tasks.delete"
      ]
    },
    "public.billing_provider": {
      "name": "billing_provider",
      "schema": "public",
      "values": [
        "stripe",
        "lemon-squeezy",
        "paddle"
      ]
    },
    "public.billing_providers": {
      "name": "billing_providers",
      "schema": "public",
      "values": [
        "stripe"
      ]
    },
    "public.chat_role": {
      "name": "chat_role",
      "schema": "public",
      "values": [
        "user",
        "assistant"
      ]
    },
    "public.difficulty": {
      "name": "difficulty",
      "schema": "public",
      "values": [
        "easy",
        "medium",
        "hard"
      ]
    },
    "public.invitation_status": {
      "name": "invitation_status",
      "schema": "public",
      "values": [
        "pending",
        "accepted",
        "expired",
        "deleted"
      ]
    },
    "public.invitation_type": {
      "name": "invitation_type",
      "schema": "public",
      "values": [
        "one-time",
        "24-hour"
      ]
    },
    "public.notification_channel": {
      "name": "notification_channel",
      "schema": "public",
      "values": [
        "in_app",
        "email"
      ]
    },
    "public.notification_type": {
      "name": "notification_type",
      "schema": "public",
      "values": [
        "info",
        "warning",
        "error"
      ]
    },
    "public.payment_status": {
      "name": "payment_status",
      "schema": "public",
      "values": [
        "pending",
        "succeeded",
        "failed"
      ]
    },
    "public.pricing_plan_interval": {
      "name": "pricing_plan_interval",
      "schema": "public",
      "values": [
        "day",
        "week",
        "month",
        "year"
      ]
    },
    "public.pricing_type": {
      "name": "pricing_type",
      "schema": "public",
      "values": [
        "one_time",
        "recurring"
      ]
    },
    "public.role_status": {
      "name": "role_status",
      "schema": "public",
      "values": [
        "admin",
        "user"
      ]
    },
    "public.subscription_item_type": {
      "name": "subscription_item_type",
      "schema": "public",
      "values": [
        "flat",
        "per_seat",
        "metered"
      ]
    },
    "public.subscription_status": {
      "name": "subscription_status",
      "schema": "public",
      "values": [
        "active",
        "trialing",
        "past_due",
        "canceled",
        "unpaid",
        "incomplete",
        "incomplete_expired",
        "paused"
      ]
    },
    "public.taskstate": {
      "name": "taskstate",
      "schema": "public",
      "values": [
        "UNTOUCHED",
        "ONGOING",
        "COMPLETED"
      ]
    },
    "public.tasktype": {
      "name": "tasktype",
      "schema": "public",
      "values": [
        "GAME",
        "QUIZ",
        "FLASHCARD"
      ]
    }
  },
  "schemas": {},
  "sequences": {
    "public.answers_id_seq1": {
      "name": "answers_id_seq1",
      "schema": "public",
      "increment": "1",
      "startWith": "1",
      "minValue": "1",
      "maxValue": "2147483647",
      "cache": "1",
      "cycle": false
    }
  },
  "roles": {},
  "policies": {},
  "views": {
    "public.user_account_workspace": {
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "picture_url": {
          "name": "picture_url",
          "type": "varchar(1000)",
          "primaryKey": false,
          "notNull": false
        },
        "subscription_status": {
          "name": "subscription_status",
          "type": "subscription_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        }
      },
      "definition": "SELECT accounts.id, accounts.name, accounts.picture_url, ( SELECT subscriptions.status FROM subscriptions WHERE subscriptions.account_id = accounts.id LIMIT 1) AS subscription_status FROM accounts WHERE accounts.primary_owner_user_id = (( SELECT auth.uid() AS uid)) AND accounts.is_personal_account = true LIMIT 1",
      "name": "user_account_workspace",
      "schema": "public",
      "isExisting": false,
      "with": {
        "securityInvoker": true
      },
      "materialized": false
    },
    "public.user_accounts": {
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "picture_url": {
          "name": "picture_url",
          "type": "varchar(1000)",
          "primaryKey": false,
          "notNull": false
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "definition": "SELECT account.id, account.name, account.picture_url, account.slug, membership.account_role AS role FROM accounts account JOIN accounts_memberships membership ON account.id = membership.account_id WHERE membership.user_id = (( SELECT auth.uid() AS uid)) AND account.is_personal_account = false AND (account.id IN ( SELECT accounts_memberships.account_id FROM accounts_memberships WHERE accounts_memberships.user_id = (( SELECT auth.uid() AS uid))))",
      "name": "user_accounts",
      "schema": "public",
      "isExisting": false,
      "with": {
        "securityInvoker": true
      },
      "materialized": false
    }
  },
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}