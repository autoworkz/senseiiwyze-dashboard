name: Create Issue from PR

on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  contents: read
  pull-requests: read
  issues: write

jobs:
  create-issue-from-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Issue from PR
        id: create-issue
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            // Create issue title from PR title
            const issueTitle = `PR: ${pr.title}`;
            
            // Create issue body from PR description and additional context
            let issueBody = `## PR Information\n\n`;
            issueBody += `**PR #${pr.number}**: ${pr.title}\n\n`;
            issueBody += `**Author**: @${pr.user.login}\n`;
            issueBody += `**Branch**: \`${pr.head.ref}\` â†’ \`${pr.base.ref}\`\n`;
            issueBody += `**Status**: ${pr.state}\n\n`;
            
            if (pr.body) {
              issueBody += `## Description\n\n${pr.body}\n\n`;
            }
            
            // Add files changed information
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            if (files.length > 0) {
              issueBody += `## Files Changed\n\n`;
              files.forEach(file => {
                const status = file.status;
                const statusIcon = status === 'added' ? 'ðŸŸ¢' : 
                                 status === 'modified' ? 'ðŸŸ¡' : 
                                 status === 'removed' ? 'ðŸ”´' : 'âšª';
                issueBody += `${statusIcon} \`${file.filename}\` (${status})\n`;
              });
              issueBody += `\n`;
            }
            
            // Add labels for Open Hands Resolver
            issueBody += `---\n\n*This issue was automatically created from PR #${pr.number}*\n`;
            
            // Check if issue already exists for this PR
            const { data: existingIssues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: [`pr-${pr.number}`]
            });
            
            if (existingIssues.length > 0) {
              // Update existing issue
              const existingIssue = existingIssues[0];
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                title: issueTitle,
                body: issueBody
              });
              console.log(`Updated existing issue #${existingIssue.number} for PR #${pr.number}`);
              return existingIssue.number;
            } else {
              // Create new issue
              const { data: newIssue } = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: issueBody,
                labels: [`pr-${pr.number}`, 'auto-generated', 'openhands-trigger']
              });
              console.log(`Created new issue #${newIssue.number} for PR #${pr.number}`);
              return newIssue.number;
            }

      - name: Add PR reference to issue
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = ${{ steps.create-issue.outputs.result }};
            const prNumber = context.issue.number;
            
            // Add comment to PR linking to the issue
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: `ðŸ”— **Open Hands Resolver Issue Created**: #${issueNumber}\n\nThis PR has been automatically converted to an issue for Open Hands Resolver processing.`
            }); 